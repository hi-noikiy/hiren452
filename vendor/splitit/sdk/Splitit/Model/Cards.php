<?php
/**
 * Cards
 *
 * PHP version 5
 *
 * @category Class
 * @package  SplititSdkClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * splitit-web-api-public-sdk
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.12
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace SplititSdkClient\Model;

use \ArrayAccess;
use \SplititSdkClient\ObjectSerializer;

/**
 * Cards Class Doc Comment
 *
 * @category Class
 * @package  SplititSdkClient
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Cards implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Cards';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'id' => 'int',
        'kek_id' => 'int',
        'bin_bin_number' => 'string',
        'bin_issuing_country_iso_number' => 'string',
        'bin_id' => 'int',
        'expiration_month' => 'int',
        'expiration_year' => 'int',
        'address_data_address_line' => 'string',
        'address_data_zip' => 'string',
        'is_deleted' => 'bool',
        'version' => 'int',
        'pis_member_unique_id' => 'string',
        'pis_member_id' => 'int',
        'address_data_address_line2' => 'string',
        'address_data_city' => 'string',
        'address_data_country_id' => 'int',
        'address_data_state_id' => 'int',
        'address_data_legacy_full_address_line' => 'string',
        'bin_is_prepaid' => 'bool',
        'token' => 'string',
        'kek' => '\SplititSdkClient\Model\Keks',
        'card_class' => 'string',
        'product_id' => 'string',
        'issuer_bank_name' => 'string',
        'dek_data_id' => 'int',
        'dek_data' => '\SplititSdkClient\Model\DEKData',
        'pis_member' => 'object',
        'account_updater_pending_cards' => '\SplititSdkClient\Model\AccountUpdaterPendingCards[]',
        'card_state_logs' => '\SplititSdkClient\Model\CardStateLogs[]',
        'fraud_detection_logs' => '\SplititSdkClient\Model\FraudDetectionLogs[]',
        'installment_plan_audit_logs' => '\SplititSdkClient\Model\InstallmentPlanAuditLogs[]',
        'installment_plans' => '\SplititSdkClient\Model\InstallmentPlans[]',
        'address_data' => '\SplititSdkClient\Model\AddressData2',
        'encrypted_number' => 'string',
        'dek' => 'string',
        'masked_number' => 'string',
        'card_holder_name' => 'string',
        'bin_card_brand' => '\SplititSdkClient\Model\CardBrand',
        'bin_card_type' => '\SplititSdkClient\Model\CardType',
        'cvv' => 'string',
        'bin' => '\SplititSdkClient\Model\BinData',
        'country' => '\SplititSdkClient\Model\Countries',
        'state' => '\SplititSdkClient\Model\CountrySubdivisions'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'id' => 'int64',
        'kek_id' => 'int64',
        'bin_bin_number' => null,
        'bin_issuing_country_iso_number' => null,
        'bin_id' => 'int64',
        'expiration_month' => 'int32',
        'expiration_year' => 'int32',
        'address_data_address_line' => null,
        'address_data_zip' => null,
        'is_deleted' => null,
        'version' => 'int32',
        'pis_member_unique_id' => null,
        'pis_member_id' => 'int64',
        'address_data_address_line2' => null,
        'address_data_city' => null,
        'address_data_country_id' => 'int64',
        'address_data_state_id' => 'int64',
        'address_data_legacy_full_address_line' => null,
        'bin_is_prepaid' => null,
        'token' => null,
        'kek' => null,
        'card_class' => null,
        'product_id' => null,
        'issuer_bank_name' => null,
        'dek_data_id' => 'int64',
        'dek_data' => null,
        'pis_member' => null,
        'account_updater_pending_cards' => null,
        'card_state_logs' => null,
        'fraud_detection_logs' => null,
        'installment_plan_audit_logs' => null,
        'installment_plans' => null,
        'address_data' => null,
        'encrypted_number' => null,
        'dek' => null,
        'masked_number' => null,
        'card_holder_name' => null,
        'bin_card_brand' => null,
        'bin_card_type' => null,
        'cvv' => null,
        'bin' => null,
        'country' => null,
        'state' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'Id',
        'kek_id' => 'KekId',
        'bin_bin_number' => 'BinBinNumber',
        'bin_issuing_country_iso_number' => 'BinIssuingCountryIsoNumber',
        'bin_id' => 'BinId',
        'expiration_month' => 'ExpirationMonth',
        'expiration_year' => 'ExpirationYear',
        'address_data_address_line' => 'AddressDataAddressLine',
        'address_data_zip' => 'AddressDataZip',
        'is_deleted' => 'IsDeleted',
        'version' => 'Version',
        'pis_member_unique_id' => 'PisMemberUniqueId',
        'pis_member_id' => 'PisMemberId',
        'address_data_address_line2' => 'AddressDataAddressLine2',
        'address_data_city' => 'AddressDataCity',
        'address_data_country_id' => 'AddressDataCountryId',
        'address_data_state_id' => 'AddressDataStateId',
        'address_data_legacy_full_address_line' => 'AddressDataLegacyFullAddressLine',
        'bin_is_prepaid' => 'BinIsPrepaid',
        'token' => 'Token',
        'kek' => 'Kek',
        'card_class' => 'CardClass',
        'product_id' => 'ProductId',
        'issuer_bank_name' => 'IssuerBankName',
        'dek_data_id' => 'DekDataId',
        'dek_data' => 'DekData',
        'pis_member' => 'PisMember',
        'account_updater_pending_cards' => 'AccountUpdaterPendingCards',
        'card_state_logs' => 'CardStateLogs',
        'fraud_detection_logs' => 'FraudDetectionLogs',
        'installment_plan_audit_logs' => 'InstallmentPlanAuditLogs',
        'installment_plans' => 'InstallmentPlans',
        'address_data' => 'AddressData',
        'encrypted_number' => 'EncryptedNumber',
        'dek' => 'Dek',
        'masked_number' => 'MaskedNumber',
        'card_holder_name' => 'CardHolderName',
        'bin_card_brand' => 'BinCardBrand',
        'bin_card_type' => 'BinCardType',
        'cvv' => 'Cvv',
        'bin' => 'Bin',
        'country' => 'Country',
        'state' => 'State'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'kek_id' => 'setKekId',
        'bin_bin_number' => 'setBinBinNumber',
        'bin_issuing_country_iso_number' => 'setBinIssuingCountryIsoNumber',
        'bin_id' => 'setBinId',
        'expiration_month' => 'setExpirationMonth',
        'expiration_year' => 'setExpirationYear',
        'address_data_address_line' => 'setAddressDataAddressLine',
        'address_data_zip' => 'setAddressDataZip',
        'is_deleted' => 'setIsDeleted',
        'version' => 'setVersion',
        'pis_member_unique_id' => 'setPisMemberUniqueId',
        'pis_member_id' => 'setPisMemberId',
        'address_data_address_line2' => 'setAddressDataAddressLine2',
        'address_data_city' => 'setAddressDataCity',
        'address_data_country_id' => 'setAddressDataCountryId',
        'address_data_state_id' => 'setAddressDataStateId',
        'address_data_legacy_full_address_line' => 'setAddressDataLegacyFullAddressLine',
        'bin_is_prepaid' => 'setBinIsPrepaid',
        'token' => 'setToken',
        'kek' => 'setKek',
        'card_class' => 'setCardClass',
        'product_id' => 'setProductId',
        'issuer_bank_name' => 'setIssuerBankName',
        'dek_data_id' => 'setDekDataId',
        'dek_data' => 'setDekData',
        'pis_member' => 'setPisMember',
        'account_updater_pending_cards' => 'setAccountUpdaterPendingCards',
        'card_state_logs' => 'setCardStateLogs',
        'fraud_detection_logs' => 'setFraudDetectionLogs',
        'installment_plan_audit_logs' => 'setInstallmentPlanAuditLogs',
        'installment_plans' => 'setInstallmentPlans',
        'address_data' => 'setAddressData',
        'encrypted_number' => 'setEncryptedNumber',
        'dek' => 'setDek',
        'masked_number' => 'setMaskedNumber',
        'card_holder_name' => 'setCardHolderName',
        'bin_card_brand' => 'setBinCardBrand',
        'bin_card_type' => 'setBinCardType',
        'cvv' => 'setCvv',
        'bin' => 'setBin',
        'country' => 'setCountry',
        'state' => 'setState'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'kek_id' => 'getKekId',
        'bin_bin_number' => 'getBinBinNumber',
        'bin_issuing_country_iso_number' => 'getBinIssuingCountryIsoNumber',
        'bin_id' => 'getBinId',
        'expiration_month' => 'getExpirationMonth',
        'expiration_year' => 'getExpirationYear',
        'address_data_address_line' => 'getAddressDataAddressLine',
        'address_data_zip' => 'getAddressDataZip',
        'is_deleted' => 'getIsDeleted',
        'version' => 'getVersion',
        'pis_member_unique_id' => 'getPisMemberUniqueId',
        'pis_member_id' => 'getPisMemberId',
        'address_data_address_line2' => 'getAddressDataAddressLine2',
        'address_data_city' => 'getAddressDataCity',
        'address_data_country_id' => 'getAddressDataCountryId',
        'address_data_state_id' => 'getAddressDataStateId',
        'address_data_legacy_full_address_line' => 'getAddressDataLegacyFullAddressLine',
        'bin_is_prepaid' => 'getBinIsPrepaid',
        'token' => 'getToken',
        'kek' => 'getKek',
        'card_class' => 'getCardClass',
        'product_id' => 'getProductId',
        'issuer_bank_name' => 'getIssuerBankName',
        'dek_data_id' => 'getDekDataId',
        'dek_data' => 'getDekData',
        'pis_member' => 'getPisMember',
        'account_updater_pending_cards' => 'getAccountUpdaterPendingCards',
        'card_state_logs' => 'getCardStateLogs',
        'fraud_detection_logs' => 'getFraudDetectionLogs',
        'installment_plan_audit_logs' => 'getInstallmentPlanAuditLogs',
        'installment_plans' => 'getInstallmentPlans',
        'address_data' => 'getAddressData',
        'encrypted_number' => 'getEncryptedNumber',
        'dek' => 'getDek',
        'masked_number' => 'getMaskedNumber',
        'card_holder_name' => 'getCardHolderName',
        'bin_card_brand' => 'getBinCardBrand',
        'bin_card_type' => 'getBinCardType',
        'cvv' => 'getCvv',
        'bin' => 'getBin',
        'country' => 'getCountry',
        'state' => 'getState'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['kek_id'] = isset($data['kek_id']) ? $data['kek_id'] : null;
        $this->container['bin_bin_number'] = isset($data['bin_bin_number']) ? $data['bin_bin_number'] : null;
        $this->container['bin_issuing_country_iso_number'] = isset($data['bin_issuing_country_iso_number']) ? $data['bin_issuing_country_iso_number'] : null;
        $this->container['bin_id'] = isset($data['bin_id']) ? $data['bin_id'] : null;
        $this->container['expiration_month'] = isset($data['expiration_month']) ? $data['expiration_month'] : null;
        $this->container['expiration_year'] = isset($data['expiration_year']) ? $data['expiration_year'] : null;
        $this->container['address_data_address_line'] = isset($data['address_data_address_line']) ? $data['address_data_address_line'] : null;
        $this->container['address_data_zip'] = isset($data['address_data_zip']) ? $data['address_data_zip'] : null;
        $this->container['is_deleted'] = isset($data['is_deleted']) ? $data['is_deleted'] : null;
        $this->container['version'] = isset($data['version']) ? $data['version'] : null;
        $this->container['pis_member_unique_id'] = isset($data['pis_member_unique_id']) ? $data['pis_member_unique_id'] : null;
        $this->container['pis_member_id'] = isset($data['pis_member_id']) ? $data['pis_member_id'] : null;
        $this->container['address_data_address_line2'] = isset($data['address_data_address_line2']) ? $data['address_data_address_line2'] : null;
        $this->container['address_data_city'] = isset($data['address_data_city']) ? $data['address_data_city'] : null;
        $this->container['address_data_country_id'] = isset($data['address_data_country_id']) ? $data['address_data_country_id'] : null;
        $this->container['address_data_state_id'] = isset($data['address_data_state_id']) ? $data['address_data_state_id'] : null;
        $this->container['address_data_legacy_full_address_line'] = isset($data['address_data_legacy_full_address_line']) ? $data['address_data_legacy_full_address_line'] : null;
        $this->container['bin_is_prepaid'] = isset($data['bin_is_prepaid']) ? $data['bin_is_prepaid'] : null;
        $this->container['token'] = isset($data['token']) ? $data['token'] : null;
        $this->container['kek'] = isset($data['kek']) ? $data['kek'] : null;
        $this->container['card_class'] = isset($data['card_class']) ? $data['card_class'] : null;
        $this->container['product_id'] = isset($data['product_id']) ? $data['product_id'] : null;
        $this->container['issuer_bank_name'] = isset($data['issuer_bank_name']) ? $data['issuer_bank_name'] : null;
        $this->container['dek_data_id'] = isset($data['dek_data_id']) ? $data['dek_data_id'] : null;
        $this->container['dek_data'] = isset($data['dek_data']) ? $data['dek_data'] : null;
        $this->container['pis_member'] = isset($data['pis_member']) ? $data['pis_member'] : null;
        $this->container['account_updater_pending_cards'] = isset($data['account_updater_pending_cards']) ? $data['account_updater_pending_cards'] : null;
        $this->container['card_state_logs'] = isset($data['card_state_logs']) ? $data['card_state_logs'] : null;
        $this->container['fraud_detection_logs'] = isset($data['fraud_detection_logs']) ? $data['fraud_detection_logs'] : null;
        $this->container['installment_plan_audit_logs'] = isset($data['installment_plan_audit_logs']) ? $data['installment_plan_audit_logs'] : null;
        $this->container['installment_plans'] = isset($data['installment_plans']) ? $data['installment_plans'] : null;
        $this->container['address_data'] = isset($data['address_data']) ? $data['address_data'] : null;
        $this->container['encrypted_number'] = isset($data['encrypted_number']) ? $data['encrypted_number'] : null;
        $this->container['dek'] = isset($data['dek']) ? $data['dek'] : null;
        $this->container['masked_number'] = isset($data['masked_number']) ? $data['masked_number'] : null;
        $this->container['card_holder_name'] = isset($data['card_holder_name']) ? $data['card_holder_name'] : null;
        $this->container['bin_card_brand'] = isset($data['bin_card_brand']) ? $data['bin_card_brand'] : null;
        $this->container['bin_card_type'] = isset($data['bin_card_type']) ? $data['bin_card_type'] : null;
        $this->container['cvv'] = isset($data['cvv']) ? $data['cvv'] : null;
        $this->container['bin'] = isset($data['bin']) ? $data['bin'] : null;
        $this->container['country'] = isset($data['country']) ? $data['country'] : null;
        $this->container['state'] = isset($data['state']) ? $data['state'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if ($this->container['kek_id'] === null) {
            $invalidProperties[] = "'kek_id' can't be null";
        }
        if ($this->container['bin_id'] === null) {
            $invalidProperties[] = "'bin_id' can't be null";
        }
        if ($this->container['expiration_month'] === null) {
            $invalidProperties[] = "'expiration_month' can't be null";
        }
        if ($this->container['expiration_year'] === null) {
            $invalidProperties[] = "'expiration_year' can't be null";
        }
        if ($this->container['is_deleted'] === null) {
            $invalidProperties[] = "'is_deleted' can't be null";
        }
        if ($this->container['version'] === null) {
            $invalidProperties[] = "'version' can't be null";
        }
        if ($this->container['bin_card_brand'] === null) {
            $invalidProperties[] = "'bin_card_brand' can't be null";
        }
        if ($this->container['bin_card_type'] === null) {
            $invalidProperties[] = "'bin_card_type' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets kek_id
     *
     * @return int
     */
    public function getKekId()
    {
        return $this->container['kek_id'];
    }

    /**
     * Sets kek_id
     *
     * @param int $kek_id kek_id
     *
     * @return $this
     */
    public function setKekId($kek_id)
    {
        $this->container['kek_id'] = $kek_id;

        return $this;
    }

    /**
     * Gets bin_bin_number
     *
     * @return string
     */
    public function getBinBinNumber()
    {
        return $this->container['bin_bin_number'];
    }

    /**
     * Sets bin_bin_number
     *
     * @param string $bin_bin_number bin_bin_number
     *
     * @return $this
     */
    public function setBinBinNumber($bin_bin_number)
    {
        $this->container['bin_bin_number'] = $bin_bin_number;

        return $this;
    }

    /**
     * Gets bin_issuing_country_iso_number
     *
     * @return string
     */
    public function getBinIssuingCountryIsoNumber()
    {
        return $this->container['bin_issuing_country_iso_number'];
    }

    /**
     * Sets bin_issuing_country_iso_number
     *
     * @param string $bin_issuing_country_iso_number bin_issuing_country_iso_number
     *
     * @return $this
     */
    public function setBinIssuingCountryIsoNumber($bin_issuing_country_iso_number)
    {
        $this->container['bin_issuing_country_iso_number'] = $bin_issuing_country_iso_number;

        return $this;
    }

    /**
     * Gets bin_id
     *
     * @return int
     */
    public function getBinId()
    {
        return $this->container['bin_id'];
    }

    /**
     * Sets bin_id
     *
     * @param int $bin_id bin_id
     *
     * @return $this
     */
    public function setBinId($bin_id)
    {
        $this->container['bin_id'] = $bin_id;

        return $this;
    }

    /**
     * Gets expiration_month
     *
     * @return int
     */
    public function getExpirationMonth()
    {
        return $this->container['expiration_month'];
    }

    /**
     * Sets expiration_month
     *
     * @param int $expiration_month expiration_month
     *
     * @return $this
     */
    public function setExpirationMonth($expiration_month)
    {
        $this->container['expiration_month'] = $expiration_month;

        return $this;
    }

    /**
     * Gets expiration_year
     *
     * @return int
     */
    public function getExpirationYear()
    {
        return $this->container['expiration_year'];
    }

    /**
     * Sets expiration_year
     *
     * @param int $expiration_year expiration_year
     *
     * @return $this
     */
    public function setExpirationYear($expiration_year)
    {
        $this->container['expiration_year'] = $expiration_year;

        return $this;
    }

    /**
     * Gets address_data_address_line
     *
     * @return string
     */
    public function getAddressDataAddressLine()
    {
        return $this->container['address_data_address_line'];
    }

    /**
     * Sets address_data_address_line
     *
     * @param string $address_data_address_line address_data_address_line
     *
     * @return $this
     */
    public function setAddressDataAddressLine($address_data_address_line)
    {
        $this->container['address_data_address_line'] = $address_data_address_line;

        return $this;
    }

    /**
     * Gets address_data_zip
     *
     * @return string
     */
    public function getAddressDataZip()
    {
        return $this->container['address_data_zip'];
    }

    /**
     * Sets address_data_zip
     *
     * @param string $address_data_zip address_data_zip
     *
     * @return $this
     */
    public function setAddressDataZip($address_data_zip)
    {
        $this->container['address_data_zip'] = $address_data_zip;

        return $this;
    }

    /**
     * Gets is_deleted
     *
     * @return bool
     */
    public function getIsDeleted()
    {
        return $this->container['is_deleted'];
    }

    /**
     * Sets is_deleted
     *
     * @param bool $is_deleted is_deleted
     *
     * @return $this
     */
    public function setIsDeleted($is_deleted)
    {
        $this->container['is_deleted'] = $is_deleted;

        return $this;
    }

    /**
     * Gets version
     *
     * @return int
     */
    public function getVersion()
    {
        return $this->container['version'];
    }

    /**
     * Sets version
     *
     * @param int $version version
     *
     * @return $this
     */
    public function setVersion($version)
    {
        $this->container['version'] = $version;

        return $this;
    }

    /**
     * Gets pis_member_unique_id
     *
     * @return string
     */
    public function getPisMemberUniqueId()
    {
        return $this->container['pis_member_unique_id'];
    }

    /**
     * Sets pis_member_unique_id
     *
     * @param string $pis_member_unique_id pis_member_unique_id
     *
     * @return $this
     */
    public function setPisMemberUniqueId($pis_member_unique_id)
    {
        $this->container['pis_member_unique_id'] = $pis_member_unique_id;

        return $this;
    }

    /**
     * Gets pis_member_id
     *
     * @return int
     */
    public function getPisMemberId()
    {
        return $this->container['pis_member_id'];
    }

    /**
     * Sets pis_member_id
     *
     * @param int $pis_member_id pis_member_id
     *
     * @return $this
     */
    public function setPisMemberId($pis_member_id)
    {
        $this->container['pis_member_id'] = $pis_member_id;

        return $this;
    }

    /**
     * Gets address_data_address_line2
     *
     * @return string
     */
    public function getAddressDataAddressLine2()
    {
        return $this->container['address_data_address_line2'];
    }

    /**
     * Sets address_data_address_line2
     *
     * @param string $address_data_address_line2 address_data_address_line2
     *
     * @return $this
     */
    public function setAddressDataAddressLine2($address_data_address_line2)
    {
        $this->container['address_data_address_line2'] = $address_data_address_line2;

        return $this;
    }

    /**
     * Gets address_data_city
     *
     * @return string
     */
    public function getAddressDataCity()
    {
        return $this->container['address_data_city'];
    }

    /**
     * Sets address_data_city
     *
     * @param string $address_data_city address_data_city
     *
     * @return $this
     */
    public function setAddressDataCity($address_data_city)
    {
        $this->container['address_data_city'] = $address_data_city;

        return $this;
    }

    /**
     * Gets address_data_country_id
     *
     * @return int
     */
    public function getAddressDataCountryId()
    {
        return $this->container['address_data_country_id'];
    }

    /**
     * Sets address_data_country_id
     *
     * @param int $address_data_country_id address_data_country_id
     *
     * @return $this
     */
    public function setAddressDataCountryId($address_data_country_id)
    {
        $this->container['address_data_country_id'] = $address_data_country_id;

        return $this;
    }

    /**
     * Gets address_data_state_id
     *
     * @return int
     */
    public function getAddressDataStateId()
    {
        return $this->container['address_data_state_id'];
    }

    /**
     * Sets address_data_state_id
     *
     * @param int $address_data_state_id address_data_state_id
     *
     * @return $this
     */
    public function setAddressDataStateId($address_data_state_id)
    {
        $this->container['address_data_state_id'] = $address_data_state_id;

        return $this;
    }

    /**
     * Gets address_data_legacy_full_address_line
     *
     * @return string
     */
    public function getAddressDataLegacyFullAddressLine()
    {
        return $this->container['address_data_legacy_full_address_line'];
    }

    /**
     * Sets address_data_legacy_full_address_line
     *
     * @param string $address_data_legacy_full_address_line address_data_legacy_full_address_line
     *
     * @return $this
     */
    public function setAddressDataLegacyFullAddressLine($address_data_legacy_full_address_line)
    {
        $this->container['address_data_legacy_full_address_line'] = $address_data_legacy_full_address_line;

        return $this;
    }

    /**
     * Gets bin_is_prepaid
     *
     * @return bool
     */
    public function getBinIsPrepaid()
    {
        return $this->container['bin_is_prepaid'];
    }

    /**
     * Sets bin_is_prepaid
     *
     * @param bool $bin_is_prepaid bin_is_prepaid
     *
     * @return $this
     */
    public function setBinIsPrepaid($bin_is_prepaid)
    {
        $this->container['bin_is_prepaid'] = $bin_is_prepaid;

        return $this;
    }

    /**
     * Gets token
     *
     * @return string
     */
    public function getToken()
    {
        return $this->container['token'];
    }

    /**
     * Sets token
     *
     * @param string $token token
     *
     * @return $this
     */
    public function setToken($token)
    {
        $this->container['token'] = $token;

        return $this;
    }

    /**
     * Gets kek
     *
     * @return \SplititSdkClient\Model\Keks
     */
    public function getKek()
    {
        return $this->container['kek'];
    }

    /**
     * Sets kek
     *
     * @param \SplititSdkClient\Model\Keks $kek kek
     *
     * @return $this
     */
    public function setKek($kek)
    {
        $this->container['kek'] = $kek;

        return $this;
    }

    /**
     * Gets card_class
     *
     * @return string
     */
    public function getCardClass()
    {
        return $this->container['card_class'];
    }

    /**
     * Sets card_class
     *
     * @param string $card_class card_class
     *
     * @return $this
     */
    public function setCardClass($card_class)
    {
        $this->container['card_class'] = $card_class;

        return $this;
    }

    /**
     * Gets product_id
     *
     * @return string
     */
    public function getProductId()
    {
        return $this->container['product_id'];
    }

    /**
     * Sets product_id
     *
     * @param string $product_id product_id
     *
     * @return $this
     */
    public function setProductId($product_id)
    {
        $this->container['product_id'] = $product_id;

        return $this;
    }

    /**
     * Gets issuer_bank_name
     *
     * @return string
     */
    public function getIssuerBankName()
    {
        return $this->container['issuer_bank_name'];
    }

    /**
     * Sets issuer_bank_name
     *
     * @param string $issuer_bank_name issuer_bank_name
     *
     * @return $this
     */
    public function setIssuerBankName($issuer_bank_name)
    {
        $this->container['issuer_bank_name'] = $issuer_bank_name;

        return $this;
    }

    /**
     * Gets dek_data_id
     *
     * @return int
     */
    public function getDekDataId()
    {
        return $this->container['dek_data_id'];
    }

    /**
     * Sets dek_data_id
     *
     * @param int $dek_data_id dek_data_id
     *
     * @return $this
     */
    public function setDekDataId($dek_data_id)
    {
        $this->container['dek_data_id'] = $dek_data_id;

        return $this;
    }

    /**
     * Gets dek_data
     *
     * @return \SplititSdkClient\Model\DEKData
     */
    public function getDekData()
    {
        return $this->container['dek_data'];
    }

    /**
     * Sets dek_data
     *
     * @param \SplititSdkClient\Model\DEKData $dek_data dek_data
     *
     * @return $this
     */
    public function setDekData($dek_data)
    {
        $this->container['dek_data'] = $dek_data;

        return $this;
    }

    /**
     * Gets pis_member
     *
     * @return object
     */
    public function getPisMember()
    {
        return $this->container['pis_member'];
    }

    /**
     * Sets pis_member
     *
     * @param object $pis_member pis_member
     *
     * @return $this
     */
    public function setPisMember($pis_member)
    {
        $this->container['pis_member'] = $pis_member;

        return $this;
    }

    /**
     * Gets account_updater_pending_cards
     *
     * @return \SplititSdkClient\Model\AccountUpdaterPendingCards[]
     */
    public function getAccountUpdaterPendingCards()
    {
        return $this->container['account_updater_pending_cards'];
    }

    /**
     * Sets account_updater_pending_cards
     *
     * @param \SplititSdkClient\Model\AccountUpdaterPendingCards[] $account_updater_pending_cards account_updater_pending_cards
     *
     * @return $this
     */
    public function setAccountUpdaterPendingCards($account_updater_pending_cards)
    {
        $this->container['account_updater_pending_cards'] = $account_updater_pending_cards;

        return $this;
    }

    /**
     * Gets card_state_logs
     *
     * @return \SplititSdkClient\Model\CardStateLogs[]
     */
    public function getCardStateLogs()
    {
        return $this->container['card_state_logs'];
    }

    /**
     * Sets card_state_logs
     *
     * @param \SplititSdkClient\Model\CardStateLogs[] $card_state_logs card_state_logs
     *
     * @return $this
     */
    public function setCardStateLogs($card_state_logs)
    {
        $this->container['card_state_logs'] = $card_state_logs;

        return $this;
    }

    /**
     * Gets fraud_detection_logs
     *
     * @return \SplititSdkClient\Model\FraudDetectionLogs[]
     */
    public function getFraudDetectionLogs()
    {
        return $this->container['fraud_detection_logs'];
    }

    /**
     * Sets fraud_detection_logs
     *
     * @param \SplititSdkClient\Model\FraudDetectionLogs[] $fraud_detection_logs fraud_detection_logs
     *
     * @return $this
     */
    public function setFraudDetectionLogs($fraud_detection_logs)
    {
        $this->container['fraud_detection_logs'] = $fraud_detection_logs;

        return $this;
    }

    /**
     * Gets installment_plan_audit_logs
     *
     * @return \SplititSdkClient\Model\InstallmentPlanAuditLogs[]
     */
    public function getInstallmentPlanAuditLogs()
    {
        return $this->container['installment_plan_audit_logs'];
    }

    /**
     * Sets installment_plan_audit_logs
     *
     * @param \SplititSdkClient\Model\InstallmentPlanAuditLogs[] $installment_plan_audit_logs installment_plan_audit_logs
     *
     * @return $this
     */
    public function setInstallmentPlanAuditLogs($installment_plan_audit_logs)
    {
        $this->container['installment_plan_audit_logs'] = $installment_plan_audit_logs;

        return $this;
    }

    /**
     * Gets installment_plans
     *
     * @return \SplititSdkClient\Model\InstallmentPlans[]
     */
    public function getInstallmentPlans()
    {
        return $this->container['installment_plans'];
    }

    /**
     * Sets installment_plans
     *
     * @param \SplititSdkClient\Model\InstallmentPlans[] $installment_plans installment_plans
     *
     * @return $this
     */
    public function setInstallmentPlans($installment_plans)
    {
        $this->container['installment_plans'] = $installment_plans;

        return $this;
    }

    /**
     * Gets address_data
     *
     * @return \SplititSdkClient\Model\AddressData2
     */
    public function getAddressData()
    {
        return $this->container['address_data'];
    }

    /**
     * Sets address_data
     *
     * @param \SplititSdkClient\Model\AddressData2 $address_data address_data
     *
     * @return $this
     */
    public function setAddressData($address_data)
    {
        $this->container['address_data'] = $address_data;

        return $this;
    }

    /**
     * Gets encrypted_number
     *
     * @return string
     */
    public function getEncryptedNumber()
    {
        return $this->container['encrypted_number'];
    }

    /**
     * Sets encrypted_number
     *
     * @param string $encrypted_number encrypted_number
     *
     * @return $this
     */
    public function setEncryptedNumber($encrypted_number)
    {
        $this->container['encrypted_number'] = $encrypted_number;

        return $this;
    }

    /**
     * Gets dek
     *
     * @return string
     */
    public function getDek()
    {
        return $this->container['dek'];
    }

    /**
     * Sets dek
     *
     * @param string $dek dek
     *
     * @return $this
     */
    public function setDek($dek)
    {
        $this->container['dek'] = $dek;

        return $this;
    }

    /**
     * Gets masked_number
     *
     * @return string
     */
    public function getMaskedNumber()
    {
        return $this->container['masked_number'];
    }

    /**
     * Sets masked_number
     *
     * @param string $masked_number masked_number
     *
     * @return $this
     */
    public function setMaskedNumber($masked_number)
    {
        $this->container['masked_number'] = $masked_number;

        return $this;
    }

    /**
     * Gets card_holder_name
     *
     * @return string
     */
    public function getCardHolderName()
    {
        return $this->container['card_holder_name'];
    }

    /**
     * Sets card_holder_name
     *
     * @param string $card_holder_name card_holder_name
     *
     * @return $this
     */
    public function setCardHolderName($card_holder_name)
    {
        $this->container['card_holder_name'] = $card_holder_name;

        return $this;
    }

    /**
     * Gets bin_card_brand
     *
     * @return \SplititSdkClient\Model\CardBrand
     */
    public function getBinCardBrand()
    {
        return $this->container['bin_card_brand'];
    }

    /**
     * Sets bin_card_brand
     *
     * @param \SplititSdkClient\Model\CardBrand $bin_card_brand bin_card_brand
     *
     * @return $this
     */
    public function setBinCardBrand($bin_card_brand)
    {
        $this->container['bin_card_brand'] = $bin_card_brand;

        return $this;
    }

    /**
     * Gets bin_card_type
     *
     * @return \SplititSdkClient\Model\CardType
     */
    public function getBinCardType()
    {
        return $this->container['bin_card_type'];
    }

    /**
     * Sets bin_card_type
     *
     * @param \SplititSdkClient\Model\CardType $bin_card_type bin_card_type
     *
     * @return $this
     */
    public function setBinCardType($bin_card_type)
    {
        $this->container['bin_card_type'] = $bin_card_type;

        return $this;
    }

    /**
     * Gets cvv
     *
     * @return string
     */
    public function getCvv()
    {
        return $this->container['cvv'];
    }

    /**
     * Sets cvv
     *
     * @param string $cvv cvv
     *
     * @return $this
     */
    public function setCvv($cvv)
    {
        $this->container['cvv'] = $cvv;

        return $this;
    }

    /**
     * Gets bin
     *
     * @return \SplititSdkClient\Model\BinData
     */
    public function getBin()
    {
        return $this->container['bin'];
    }

    /**
     * Sets bin
     *
     * @param \SplititSdkClient\Model\BinData $bin bin
     *
     * @return $this
     */
    public function setBin($bin)
    {
        $this->container['bin'] = $bin;

        return $this;
    }

    /**
     * Gets country
     *
     * @return \SplititSdkClient\Model\Countries
     */
    public function getCountry()
    {
        return $this->container['country'];
    }

    /**
     * Sets country
     *
     * @param \SplititSdkClient\Model\Countries $country country
     *
     * @return $this
     */
    public function setCountry($country)
    {
        $this->container['country'] = $country;

        return $this;
    }

    /**
     * Gets state
     *
     * @return \SplititSdkClient\Model\CountrySubdivisions
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param \SplititSdkClient\Model\CountrySubdivisions $state state
     *
     * @return $this
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


